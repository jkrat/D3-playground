{"ast":null,"code":"var _jsxFileName = \"/Users/jim/Source/CD/JavaScript/D3/D3-playground/src/components/PieCharts/BasicDonut/index.js\";\nimport React, { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport './style.css';\nimport { data } from './data';\nconst width = 500;\nconst height = Math.min(width, 500);\nconst arcs = d3.pie().padAngle(0.005).sort(null).value(d => d.value)(data);\nconst color = d3.scaleOrdinal().domain(data.map(d => d.name)).range(d3.quantize(t => d3.interpolateSpectral(t * 0.8 + 0.1), data.length).reverse());\nconst arc = d3.arc().innerRadius(Math.min(width, height) / 2 * 0.67).outerRadius(Math.min(width, height) / 2 - 1);\n\nconst BasicDonut = () => {\n  useEffect(() => {\n    const chart = d3.select('#BasicDonut').attr('viewBox', [-487.5, -250, 975, 500]);\n    chart.append('g').attr('stroke', 'white').selectAll('path').data(arcs).join('path').attr('fill', d => color(d.data.name)).attr('d', arc).append('title').text(d => \"\".concat(d.data.name, \": \").concat(d.data.value.toLocaleString()));\n    chart.append('g').attr('font-family', 'sans-serif').attr('font-size', 12).attr('text-anchor', 'middle').selectAll('text').data(arcs).join('text').attr('transform', d => \"translate(\".concat(arc.centroid(d), \")\")).call(text => text.append('tspan').attr('y', '-0.4em').attr('font-weight', 'bold').text(d => d.data.name)).call(text => text.filter(d => d.endAngle - d.startAngle > 0.25).append('tspan').attr('x', 0).attr('y', '0.7em').attr('fill-opacity', 0.7).text(d => d.data.value.toLocaleString()));\n  });\n  return React.createElement(\"svg\", {\n    id: \"BasicDonut\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  });\n};\n\nexport default BasicDonut;","map":{"version":3,"sources":["/Users/jim/Source/CD/JavaScript/D3/D3-playground/src/components/PieCharts/BasicDonut/index.js"],"names":["React","useEffect","d3","data","width","height","Math","min","arcs","pie","padAngle","sort","value","d","color","scaleOrdinal","domain","map","name","range","quantize","t","interpolateSpectral","length","reverse","arc","innerRadius","outerRadius","BasicDonut","chart","select","attr","append","selectAll","join","text","toLocaleString","centroid","call","filter","endAngle","startAngle"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport './style.css';\nimport { data } from './data';\n\nconst width = 500;\nconst height = Math.min(width, 500);\nconst arcs = d3\n  .pie()\n  .padAngle(0.005)\n  .sort(null)\n  .value(d => d.value)(data);\n\nconst color = d3\n  .scaleOrdinal()\n  .domain(data.map(d => d.name))\n  .range(\n    d3\n      .quantize(t => d3.interpolateSpectral(t * 0.8 + 0.1), data.length)\n      .reverse()\n  );\n\nconst arc = d3\n  .arc()\n  .innerRadius((Math.min(width, height) / 2) * 0.67)\n  .outerRadius(Math.min(width, height) / 2 - 1);\n\nconst BasicDonut = () => {\n  useEffect(() => {\n    const chart = d3\n      .select('#BasicDonut')\n      .attr('viewBox', [-487.5, -250, 975, 500]);\n\n    chart\n      .append('g')\n      .attr('stroke', 'white')\n      .selectAll('path')\n      .data(arcs)\n      .join('path')\n      .attr('fill', d => color(d.data.name))\n      .attr('d', arc)\n      .append('title')\n      .text(d => `${d.data.name}: ${d.data.value.toLocaleString()}`);\n\n    chart\n      .append('g')\n      .attr('font-family', 'sans-serif')\n      .attr('font-size', 12)\n      .attr('text-anchor', 'middle')\n      .selectAll('text')\n      .data(arcs)\n      .join('text')\n      .attr('transform', d => `translate(${arc.centroid(d)})`)\n      .call(text =>\n        text\n          .append('tspan')\n          .attr('y', '-0.4em')\n          .attr('font-weight', 'bold')\n          .text(d => d.data.name)\n      )\n      .call(text =>\n        text\n          .filter(d => d.endAngle - d.startAngle > 0.25)\n          .append('tspan')\n          .attr('x', 0)\n          .attr('y', '0.7em')\n          .attr('fill-opacity', 0.7)\n          .text(d => d.data.value.toLocaleString())\n      );\n  });\n\n  return <svg id=\"BasicDonut\" />;\n};\n\nexport default BasicDonut;\n"]},"metadata":{},"sourceType":"module"}