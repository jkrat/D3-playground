{"ast":null,"code":"var _jsxFileName = \"/Users/jim/Source/CD/JavaScript/D3/D3-playground/src/components/LineCharts/PosNegLine/index.jsx\";\nimport React, { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport './style.css';\nconst margin = {\n  top: 20,\n  right: 40,\n  bottom: 10,\n  left: 40\n};\nconst width = 960;\nconst height = 500 - margin.top - margin.bottom;\nlet chart;\nconst points = [[0, 80], [100, 100], [200, 30], [300, 0], [400, 90], [500, 80]];\nconst x = d3.scaleLinear().domain([0, d3.max(points, d => d[0])]).range([0, width - margin.right]);\nconst y = d3.scaleLinear().domain([0, d3.max(points, d => d[1])]).range([margin.bottom, height - margin.bottom - margin.top]);\nconst lineGenerator = d3.line().x(d => x(d[0])).y(d => y(d[1])).curve(d3.curveCardinal);\nconst pathData = lineGenerator(points);\n\nconst PosNegLine = () => {\n  useEffect(() => {\n    chart = d3.select('#PosNegLine').attr('viewBox', [0, 0, width, height]).append('g').attr('transform', \"translate(\".concat(margin.left, \",\").concat(margin.top, \")\"));\n    chart.append('path').attr('d', pathData).attr('stroke', 'steelblue').attr('fill', 'none').attr('stroke-width', 1.5);\n    chart.selectAll('circle').data(points).enter().append('circle').attr('cx', d => x(d[0])).attr('cy', d => y(d[1])).attr('r', 3);\n  });\n  return React.createElement(\"svg\", {\n    id: \"PosNegLine\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  });\n};\n\nexport default PosNegLine;","map":{"version":3,"sources":["/Users/jim/Source/CD/JavaScript/D3/D3-playground/src/components/LineCharts/PosNegLine/index.jsx"],"names":["React","useEffect","d3","margin","top","right","bottom","left","width","height","chart","points","x","scaleLinear","domain","max","d","range","y","lineGenerator","line","curve","curveCardinal","pathData","PosNegLine","select","attr","append","selectAll","data","enter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAO,aAAP;AAEA,MAAMC,MAAM,GAAG;AAAEC,EAAAA,GAAG,EAAE,EAAP;AAAWC,EAAAA,KAAK,EAAE,EAAlB;AAAsBC,EAAAA,MAAM,EAAE,EAA9B;AAAkCC,EAAAA,IAAI,EAAE;AAAxC,CAAf;AACA,MAAMC,KAAK,GAAG,GAAd;AACA,MAAMC,MAAM,GAAG,MAAMN,MAAM,CAACC,GAAb,GAAmBD,MAAM,CAACG,MAAzC;AAEA,IAAII,KAAJ;AAEA,MAAMC,MAAM,GAAG,CAAC,CAAC,CAAD,EAAI,EAAJ,CAAD,EAAU,CAAC,GAAD,EAAM,GAAN,CAAV,EAAsB,CAAC,GAAD,EAAM,EAAN,CAAtB,EAAiC,CAAC,GAAD,EAAM,CAAN,CAAjC,EAA2C,CAAC,GAAD,EAAM,EAAN,CAA3C,EAAsD,CAAC,GAAD,EAAM,EAAN,CAAtD,CAAf;AAEA,MAAMC,CAAC,GAAGV,EAAE,CACTW,WADO,GAEPC,MAFO,CAEA,CAAC,CAAD,EAAIZ,EAAE,CAACa,GAAH,CAAOJ,MAAP,EAAeK,CAAC,IAAIA,CAAC,CAAC,CAAD,CAArB,CAAJ,CAFA,EAGPC,KAHO,CAGD,CAAC,CAAD,EAAIT,KAAK,GAAGL,MAAM,CAACE,KAAnB,CAHC,CAAV;AAKA,MAAMa,CAAC,GAAGhB,EAAE,CACTW,WADO,GAEPC,MAFO,CAEA,CAAC,CAAD,EAAIZ,EAAE,CAACa,GAAH,CAAOJ,MAAP,EAAeK,CAAC,IAAIA,CAAC,CAAC,CAAD,CAArB,CAAJ,CAFA,EAGPC,KAHO,CAGD,CAACd,MAAM,CAACG,MAAR,EAAgBG,MAAM,GAAGN,MAAM,CAACG,MAAhB,GAAyBH,MAAM,CAACC,GAAhD,CAHC,CAAV;AAKA,MAAMe,aAAa,GAAGjB,EAAE,CACrBkB,IADmB,GAEnBR,CAFmB,CAEjBI,CAAC,IAAIJ,CAAC,CAACI,CAAC,CAAC,CAAD,CAAF,CAFW,EAGnBE,CAHmB,CAGjBF,CAAC,IAAIE,CAAC,CAACF,CAAC,CAAC,CAAD,CAAF,CAHW,EAInBK,KAJmB,CAIbnB,EAAE,CAACoB,aAJU,CAAtB;AAMA,MAAMC,QAAQ,GAAGJ,aAAa,CAACR,MAAD,CAA9B;;AAEA,MAAMa,UAAU,GAAG,MAAM;AACvBvB,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,GAAGR,EAAE,CACPuB,MADK,CACE,aADF,EAELC,IAFK,CAEA,SAFA,EAEW,CAAC,CAAD,EAAI,CAAJ,EAAOlB,KAAP,EAAcC,MAAd,CAFX,EAGLkB,MAHK,CAGE,GAHF,EAILD,IAJK,CAIA,WAJA,sBAI0BvB,MAAM,CAACI,IAJjC,cAIyCJ,MAAM,CAACC,GAJhD,OAAR;AAMAM,IAAAA,KAAK,CACFiB,MADH,CACU,MADV,EAEGD,IAFH,CAEQ,GAFR,EAEaH,QAFb,EAGGG,IAHH,CAGQ,QAHR,EAGkB,WAHlB,EAIGA,IAJH,CAIQ,MAJR,EAIgB,MAJhB,EAKGA,IALH,CAKQ,cALR,EAKwB,GALxB;AAOAhB,IAAAA,KAAK,CACFkB,SADH,CACa,QADb,EAEGC,IAFH,CAEQlB,MAFR,EAGGmB,KAHH,GAIGH,MAJH,CAIU,QAJV,EAKGD,IALH,CAKQ,IALR,EAKcV,CAAC,IAAIJ,CAAC,CAACI,CAAC,CAAC,CAAD,CAAF,CALpB,EAMGU,IANH,CAMQ,IANR,EAMcV,CAAC,IAAIE,CAAC,CAACF,CAAC,CAAC,CAAD,CAAF,CANpB,EAOGU,IAPH,CAOQ,GAPR,EAOa,CAPb;AAQD,GAtBQ,CAAT;AAwBA,SAAO;AAAK,IAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CA1BD;;AA4BA,eAAeF,UAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport './style.css';\n\nconst margin = { top: 20, right: 40, bottom: 10, left: 40 };\nconst width = 960;\nconst height = 500 - margin.top - margin.bottom;\n\nlet chart;\n\nconst points = [[0, 80], [100, 100], [200, 30], [300, 0], [400, 90], [500, 80]];\n\nconst x = d3\n  .scaleLinear()\n  .domain([0, d3.max(points, d => d[0])])\n  .range([0, width - margin.right]);\n\nconst y = d3\n  .scaleLinear()\n  .domain([0, d3.max(points, d => d[1])])\n  .range([margin.bottom, height - margin.bottom - margin.top]);\n\nconst lineGenerator = d3\n  .line()\n  .x(d => x(d[0]))\n  .y(d => y(d[1]))\n  .curve(d3.curveCardinal);\n\nconst pathData = lineGenerator(points);\n\nconst PosNegLine = () => {\n  useEffect(() => {\n    chart = d3\n      .select('#PosNegLine')\n      .attr('viewBox', [0, 0, width, height])\n      .append('g')\n      .attr('transform', `translate(${margin.left},${margin.top})`);\n\n    chart\n      .append('path')\n      .attr('d', pathData)\n      .attr('stroke', 'steelblue')\n      .attr('fill', 'none')\n      .attr('stroke-width', 1.5);\n\n    chart\n      .selectAll('circle')\n      .data(points)\n      .enter()\n      .append('circle')\n      .attr('cx', d => x(d[0]))\n      .attr('cy', d => y(d[1]))\n      .attr('r', 3);\n  });\n\n  return <svg id=\"PosNegLine\" />;\n};\n\nexport default PosNegLine;\n"]},"metadata":{},"sourceType":"module"}