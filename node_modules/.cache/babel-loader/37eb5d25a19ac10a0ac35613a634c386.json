{"ast":null,"code":"var _jsxFileName = \"/Users/jim/Source/CD/JavaScript/D3/D3-playground/src/components/BarCharts/VerticalStack/index.jsx\";\nimport React, { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport './style.css';\nimport { dataSet } from './data';\nconst causes = ['wounds', 'other', 'disease'];\nconst parseDate = d3.timeParse('%m/%Y');\nconst data = dataSet.map(item => {\n  item.date = parseDate(item.date);\n  return item;\n});\nconst margin = {\n  top: 20,\n  right: 50,\n  bottom: 30,\n  left: 20\n};\nconst width = 960 - margin.left - margin.right;\nconst height = 500 - margin.top - margin.bottom;\nconst x = d3.scaleBand().rangeRound([0, width]).paddingInner(0.04).paddingOuter(0.1);\nconst y = d3.scaleLinear().rangeRound([height, 0]);\nconst color = d3.scaleOrdinal(d3.schemeCategory10);\nconst xAxis = d3.axisBottom(x).tickFormat(d3.timeFormat('%b'));\nconst yAxis = d3.axisRight(y);\nconst stack = d3.stack().keys(causes);\nconst stackedSeries = stack(data);\n\nconst VerticalStack = () => {\n  useEffect(() => {\n    const chart = d3.select('#VerticalStack').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', \"translate(\".concat(margin.left, \", \").concat(margin.top, \")\"));\n    x.domain(data.map(d => d.date));\n    y.domain([0, d3.max(stackedSeries[stackedSeries.length - 1], d => d[0] + d[1])]).nice();\n    chart.append('g').attr('class', 'VSaxis VSaxis--x').attr('transform', \"translate(0, \".concat(height, \")\")).call(xAxis);\n    chart.append('g').attr('class', 'VSaxis VSaxis--y').attr('transform', \"translate(\".concat(width, \",0)\")).call(yAxis);\n    const layer = chart.selectAll('.layer').data(stackedSeries).enter().append('g').classed('layer', true).style('fill', (d, i) => color(i));\n    layer.selectAll('rect').data(d => d).enter().append('rect').attr('x', d => x(d.data.date)).attr('y', d => y(d[1] + d[0])).attr('height', d => y(d[0]) - y(d[1] + d[0])).attr('width', x.bandwidth());\n  });\n  return React.createElement(\"svg\", {\n    id: \"VerticalStack\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  });\n};\n\nexport default VerticalStack;","map":{"version":3,"sources":["/Users/jim/Source/CD/JavaScript/D3/D3-playground/src/components/BarCharts/VerticalStack/index.jsx"],"names":["React","useEffect","d3","dataSet","causes","parseDate","timeParse","data","map","item","date","margin","top","right","bottom","left","width","height","x","scaleBand","rangeRound","paddingInner","paddingOuter","y","scaleLinear","color","scaleOrdinal","schemeCategory10","xAxis","axisBottom","tickFormat","timeFormat","yAxis","axisRight","stack","keys","stackedSeries","VerticalStack","chart","select","attr","append","domain","d","max","length","nice","call","layer","selectAll","enter","classed","style","i","bandwidth"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport './style.css';\nimport { dataSet } from './data';\n\nconst causes = ['wounds', 'other', 'disease'];\n\nconst parseDate = d3.timeParse('%m/%Y');\nconst data = dataSet.map(item => {\n  item.date = parseDate(item.date);\n  return item;\n});\n\nconst margin = { top: 20, right: 50, bottom: 30, left: 20 };\nconst width = 960 - margin.left - margin.right;\nconst height = 500 - margin.top - margin.bottom;\n\nconst x = d3\n  .scaleBand()\n  .rangeRound([0, width])\n  .paddingInner(0.04)\n  .paddingOuter(0.1);\n\nconst y = d3.scaleLinear().rangeRound([height, 0]);\n\nconst color = d3.scaleOrdinal(d3.schemeCategory10);\n\nconst xAxis = d3.axisBottom(x).tickFormat(d3.timeFormat('%b'));\n\nconst yAxis = d3.axisRight(y);\n\nconst stack = d3.stack().keys(causes);\n\nconst stackedSeries = stack(data);\n\nconst VerticalStack = () => {\n  useEffect(() => {\n    const chart = d3\n      .select('#VerticalStack')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom)\n      .append('g')\n      .attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n    x.domain(data.map(d => d.date));\n\n    y.domain([\n      0,\n      d3.max(stackedSeries[stackedSeries.length - 1], d => d[0] + d[1]),\n    ]).nice();\n\n    chart\n      .append('g')\n      .attr('class', 'VSaxis VSaxis--x')\n      .attr('transform', `translate(0, ${height})`)\n      .call(xAxis);\n\n    chart\n      .append('g')\n      .attr('class', 'VSaxis VSaxis--y')\n      .attr('transform', `translate(${width},0)`)\n      .call(yAxis);\n\n    const layer = chart\n      .selectAll('.layer')\n      .data(stackedSeries)\n      .enter()\n      .append('g')\n      .classed('layer', true)\n      .style('fill', (d, i) => color(i));\n\n    layer\n      .selectAll('rect')\n      .data(d => d)\n      .enter()\n      .append('rect')\n      .attr('x', d => x(d.data.date))\n      .attr('y', d => y(d[1] + d[0]))\n      .attr('height', d => y(d[0]) - y(d[1] + d[0]))\n      .attr('width', x.bandwidth());\n  });\n\n  return <svg id=\"VerticalStack\"></svg>;\n};\n\nexport default VerticalStack;\n"]},"metadata":{},"sourceType":"module"}