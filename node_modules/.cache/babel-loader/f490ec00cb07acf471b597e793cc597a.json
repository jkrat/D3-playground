{"ast":null,"code":"var _jsxFileName = \"/Users/jim/Source/CD/JavaScript/D3/D3-playground/src/components/GridCharts/HourHeatMap/index.jsx\";\nimport React, { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport './style.css';\nimport { data } from './data';\nconst margin = {\n  top: 50,\n  right: 0,\n  bottom: 100,\n  left: 40\n};\nconst width = 960 - margin.left - margin.right;\nconst height = 430 - margin.top - margin.bottom;\nconst gridSize = Math.floor(width / 24);\nconst legendElementWidth = gridSize * 2;\nconst buckets = 9;\nconst colors = ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'];\nconst days = ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'];\nconst times = ['1a', '2a', '3a', '4a', '5a', '6a', '7a', '8a', '9a', '10a', '11a', '12a', '1p', '2p', '3p', '4p', '5p', '6p', '7p', '8p', '9p', '10p', '11p', '12p'];\nconst dataObj = data.map(i => ({\n  day: i[0],\n  hour: i[1],\n  value: i[2]\n}));\n\nconst HeatMap = () => {\n  useEffect(() => {\n    const chart = d3.select('#HourHeatMap').append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n    const dayLabels = chart.selectAll('.dayLabel').data(days).enter().append('text').text(d => d).attr('x', 0).attr('y', (d, i) => i * gridSize).style('text-anchor', 'end').attr('transform', \"translate(-6, \".concat(gridSize / 1.5, \")\")).attr('class', (d, i) => i >= 0 && i <= 4 ? 'dayLabel mono axis axis-workweek' : 'dayLabel mono axis');\n    const timeLabels = chart.selectAll('.timeLabel').data(times).enter().append('text').text(d => d).attr('x', (d, i) => i * gridSize).attr('y', 0).style('text-anchor', 'middle').attr('transform', \"translate(\".concat(gridSize / 2, \", -6)\")).attr('class', (d, i) => i >= 7 && i <= 16 ? 'timeLabel mono axis axis-worktime' : 'timeLabel mono axis');\n    const colorScale = d3.scaleQuantile().domain([0, buckets - 1, d3.max(dataObj, d => d.value)]).range(colors);\n    const cards = chart.selectAll('.hour').data(dataObj, d => \"\".concat(d.day, \":\").concat(d.hour));\n    cards.join(enter => enter.append('rect').attr('x', d => (d.hour - 1) * gridSize).attr('y', d => (d.day - 1) * gridSize).attr('rx', 4).attr('ry', 4).attr('class', 'hour bordered').attr('width', gridSize).attr('height', gridSize).style('fill', colors[0]).call(enter => enter.transition(d3.transition().duration(750)).style('fill', d => colorScale(d.value))), update => update.call(update => update.transition(d3.transition().duration(750)).style('fill', d => colorScale(d.value))), exit => exit.remove());\n    const legend = chart.selectAll('.legend').data([0].concat(colorScale.quantiles()), d => d);\n    legend.enter().append('g').attr('class', 'legend').append('rect').attr('x', (d, i) => legendElementWidth * i).attr('y', height).attr('width', legendElementWidth).attr('height', gridSize / 2).style('fill', (d, i) => colors[i]);\n    legend.enter().append('text').attr('class', 'mono').text(d => \"\\u2265 \".concat(Math.round(d))).attr('x', (d, i) => legendElementWidth * i).attr('y', height + gridSize);\n    legend.exit().remove();\n  });\n  return React.createElement(\"div\", {\n    id: \"HourHeatMap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  });\n};\n\nexport default HeatMap;","map":{"version":3,"sources":["/Users/jim/Source/CD/JavaScript/D3/D3-playground/src/components/GridCharts/HourHeatMap/index.jsx"],"names":["React","useEffect","d3","data","margin","top","right","bottom","left","width","height","gridSize","Math","floor","legendElementWidth","buckets","colors","days","times","dataObj","map","i","day","hour","value","HeatMap","chart","select","append","attr","dayLabels","selectAll","enter","text","d","style","timeLabels","colorScale","scaleQuantile","domain","max","range","cards","join","call","transition","duration","update","exit","remove","legend","concat","quantiles","round"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport './style.css';\nimport { data } from './data';\n\nconst margin = { top: 50, right: 0, bottom: 100, left: 40 };\nconst width = 960 - margin.left - margin.right;\nconst height = 430 - margin.top - margin.bottom;\nconst gridSize = Math.floor(width / 24);\nconst legendElementWidth = gridSize * 2;\nconst buckets = 9;\nconst colors = [\n  '#ffffd9',\n  '#edf8b1',\n  '#c7e9b4',\n  '#7fcdbb',\n  '#41b6c4',\n  '#1d91c0',\n  '#225ea8',\n  '#253494',\n  '#081d58',\n];\nconst days = ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'];\nconst times = [\n  '1a',\n  '2a',\n  '3a',\n  '4a',\n  '5a',\n  '6a',\n  '7a',\n  '8a',\n  '9a',\n  '10a',\n  '11a',\n  '12a',\n  '1p',\n  '2p',\n  '3p',\n  '4p',\n  '5p',\n  '6p',\n  '7p',\n  '8p',\n  '9p',\n  '10p',\n  '11p',\n  '12p',\n];\n\nconst dataObj = data.map(i => ({\n  day: i[0],\n  hour: i[1],\n  value: i[2],\n}));\n\nconst HeatMap = () => {\n  useEffect(() => {\n    const chart = d3\n      .select('#HourHeatMap')\n      .append('svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom)\n      .append('g')\n      .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n    const dayLabels = chart\n      .selectAll('.dayLabel')\n      .data(days)\n      .enter()\n      .append('text')\n      .text(d => d)\n      .attr('x', 0)\n      .attr('y', (d, i) => i * gridSize)\n      .style('text-anchor', 'end')\n      .attr('transform', `translate(-6, ${gridSize / 1.5})`)\n      .attr('class', (d, i) =>\n        i >= 0 && i <= 4\n          ? 'dayLabel mono axis axis-workweek'\n          : 'dayLabel mono axis'\n      );\n\n    const timeLabels = chart\n      .selectAll('.timeLabel')\n      .data(times)\n      .enter()\n      .append('text')\n      .text(d => d)\n      .attr('x', (d, i) => i * gridSize)\n      .attr('y', 0)\n      .style('text-anchor', 'middle')\n      .attr('transform', `translate(${gridSize / 2}, -6)`)\n      .attr('class', (d, i) =>\n        i >= 7 && i <= 16\n          ? 'timeLabel mono axis axis-worktime'\n          : 'timeLabel mono axis'\n      );\n\n    const colorScale = d3\n      .scaleQuantile()\n      .domain([0, buckets - 1, d3.max(dataObj, d => d.value)])\n      .range(colors);\n\n    const cards = chart\n      .selectAll('.hour')\n      .data(dataObj, d => `${d.day}:${d.hour}`);\n\n    cards.join(\n      enter =>\n        enter\n          .append('rect')\n          .attr('x', d => (d.hour - 1) * gridSize)\n          .attr('y', d => (d.day - 1) * gridSize)\n          .attr('rx', 4)\n          .attr('ry', 4)\n          .attr('class', 'hour bordered')\n          .attr('width', gridSize)\n          .attr('height', gridSize)\n          .style('fill', colors[0])\n          .call(enter =>\n            enter\n              .transition(d3.transition().duration(750))\n              .style('fill', d => colorScale(d.value))\n          ),\n      update =>\n        update.call(update =>\n          update\n            .transition(d3.transition().duration(750))\n            .style('fill', d => colorScale(d.value))\n        ),\n      exit => exit.remove()\n    );\n\n    const legend = chart\n      .selectAll('.legend')\n      .data([0].concat(colorScale.quantiles()), d => d);\n\n    legend\n      .enter()\n      .append('g')\n      .attr('class', 'legend')\n      .append('rect')\n      .attr('x', (d, i) => legendElementWidth * i)\n      .attr('y', height)\n      .attr('width', legendElementWidth)\n      .attr('height', gridSize / 2)\n      .style('fill', (d, i) => colors[i]);\n\n    legend\n      .enter()\n      .append('text')\n      .attr('class', 'mono')\n      .text(d => `≥ ${Math.round(d)}`)\n      .attr('x', (d, i) => legendElementWidth * i)\n      .attr('y', height + gridSize);\n\n    legend.exit().remove();\n  });\n\n  return <div id=\"HourHeatMap\" />;\n};\n\nexport default HeatMap;\n"]},"metadata":{},"sourceType":"module"}