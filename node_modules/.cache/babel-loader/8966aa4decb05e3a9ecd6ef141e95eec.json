{"ast":null,"code":"import _objectWithoutProperties from \"/Users/jim/Source/CD/JavaScript/D3/D3-playground/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/jim/Source/CD/JavaScript/D3/D3-playground/src/components/TypeSelect.jsx\";\n\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport PieCharts from './PieCharts';\nimport LineCharts from './LineCharts';\nimport BarCharts from './BarCharts';\nimport GridCharts from './GridCharts';\nimport MiscCharts from './MiscCharts';\nimport Transitions from './Transitions';\nimport Current from './Current';\n\nfunction selectType(layout) {\n  switch (layout) {\n    case 'Pie':\n      return PieCharts;\n\n    case 'Line':\n      return LineCharts;\n\n    case 'Bar':\n      return BarCharts;\n\n    case 'Misc':\n      return MiscCharts;\n\n    case 'Grid':\n      return GridCharts;\n\n    case 'Transition':\n      return Transitions;\n\n    default:\n      return Current;\n  }\n}\n\nconst TypeSelect = (_ref) => {\n  let type = _ref.type,\n      restProps = _objectWithoutProperties(_ref, [\"type\"]);\n\n  const Type = selectType(type);\n  return React.createElement(React.Fragment, null, React.createElement(Type, Object.assign({}, restProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })));\n};\n\nexport default TypeSelect;","map":{"version":3,"sources":["/Users/jim/Source/CD/JavaScript/D3/D3-playground/src/components/TypeSelect.jsx"],"names":["React","PieCharts","LineCharts","BarCharts","GridCharts","MiscCharts","Transitions","Current","selectType","layout","TypeSelect","type","restProps","Type"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,SAASC,UAAT,CAAoBC,MAApB,EAA4B;AAC1B,UAAQA,MAAR;AACE,SAAK,KAAL;AACE,aAAOR,SAAP;;AACF,SAAK,MAAL;AACE,aAAOC,UAAP;;AACF,SAAK,KAAL;AACE,aAAOC,SAAP;;AACF,SAAK,MAAL;AACE,aAAOE,UAAP;;AACF,SAAK,MAAL;AACE,aAAOD,UAAP;;AACF,SAAK,YAAL;AACE,aAAOE,WAAP;;AACF;AACE,aAAOC,OAAP;AAdJ;AAgBD;;AAED,MAAMG,UAAU,GAAG,UAA4B;AAAA,MAAzBC,IAAyB,QAAzBA,IAAyB;AAAA,MAAhBC,SAAgB;;AAC7C,QAAMC,IAAI,GAAGL,UAAU,CAACG,IAAD,CAAvB;AAEA,SAAO,0CAAG,oBAAC,IAAD,oBAAUC,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH,CAAP;AACD,CAJD;;AAMA,eAAeF,UAAf","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport PieCharts from './PieCharts';\nimport LineCharts from './LineCharts';\nimport BarCharts from './BarCharts';\nimport GridCharts from './GridCharts';\nimport MiscCharts from './MiscCharts';\nimport Transitions from './Transitions';\nimport Current from './Current';\n\nfunction selectType(layout) {\n  switch (layout) {\n    case 'Pie':\n      return PieCharts;\n    case 'Line':\n      return LineCharts;\n    case 'Bar':\n      return BarCharts;\n    case 'Misc':\n      return MiscCharts;\n    case 'Grid':\n      return GridCharts;\n    case 'Transition':\n      return Transitions;\n    default:\n      return Current;\n  }\n}\n\nconst TypeSelect = ({ type, ...restProps }) => {\n  const Type = selectType(type);\n\n  return <>{<Type {...restProps} />}</>;\n};\n\nexport default TypeSelect;\n"]},"metadata":{},"sourceType":"module"}